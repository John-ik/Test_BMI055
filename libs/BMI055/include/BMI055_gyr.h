#pragma once

// -------------------- REGISTERS --------------------

/*
generated by:
$ pdfgrep 'GYR Register 0x[0-9A-F]{2} \(\w+\)' docs/1811071031_Bosch-Sensortec-BMI055_C189620.pdf | awk '!seen[$3]++ { print "#define " $4 " " $3 }'

remove '(', ')' and add G_REG_ and align

!! REGs 0x1A, 0x1B, 0x1C, 0x1E are noname. No matched by comand 
*/

#define G_REG_CHIP_ID       0x00
#define G_REG_RATE_X_LSB    0x02
#define G_REG_RATE_X_MSB    0x03
#define G_REG_RATE_Y_LSB    0x04
#define G_REG_RATE_Y_MSB    0x05
#define G_REG_RATE_Z_LSB    0x06
#define G_REG_RATE_Z_MSB    0x07
#define G_REG_INT_STATUS_0  0x09
#define G_REG_INT_STATUS_1  0x0A
#define G_REG_INT_STATUS_2  0x0B
#define G_REG_INT_STATUS_3  0x0C
#define G_REG_FIFO_STATUS   0x0E
#define G_REG_RANGE         0x0F
#define G_REG_BW            0x10
#define G_REG_LPM1          0x11
#define G_REG_LPM2          0x12
#define G_REG_RATE_HBW      0x13
#define G_REG_BGW_SOFTRESET 0x14
#define G_REG_INT_EN_0      0x15
#define G_REG_INT_EN_1      0x16
#define G_REG_INT_MAP_0     0x17
#define G_REG_INT_MAP_1     0x18
#define G_REG_INT_MAP_2     0x19
#define G_REG_DATA_SELECT   0x1A
#define G_REG_ANY_TH        0x1B
#define G_REG_AWAKE         0x1C
#define G_REG_FIFO_WM_EN    0x1E
#define G_REG_INT_RST_LATCH 0x21
#define G_REG_High_Th_x     0x22
#define G_REG_High_Dur_x    0x23
#define G_REG_High_Th_y     0x24
#define G_REG_High_Dur_y    0x25
#define G_REG_High_Th_z     0x26
#define G_REG_High_Dur_z    0x27
#define G_REG_SOC           0x31
#define G_REG_A_FOC         0x32
#define G_REG_TRIM_NVM_CTRL 0x33
#define G_REG_BGW_SPI3_WDT  0x34
#define G_REG_OFC1          0x36
#define G_REG_OFC2          0x37
#define G_REG_OFC3          0x38
#define G_REG_OFC4          0x39
#define G_REG_TRIM_GP0      0x3A
#define G_REG_TRIM_GP1      0x3B
#define G_REG_BIST          0x3C
#define G_REG_FIFO_CONFIG_0 0x3D
#define G_REG_FIFO_CONFIG_1 0x3E
#define G_REG_FIFO_DATA     0x3F

// -------------------- CONSTANTS --------------------

#define G_CHIPID 0x0F

#define G_SOFTRESET 0xB6

// -------------------- REG BITFIELDS --------------------



// -------------------- ENUMS --------------------



typedef enum {
    G_RANGE_2000DPS = 0,
    G_RANGE_1000DPS,
    G_RANGE_500DPS,
    G_RANGE_250DPS,
    G_RANGE_125DPS
} G_Range;

//                             ODR - (output data rate ?)
typedef enum {
    G_BANDWIDTH_no   = 0b000, // ODR 100 Hz
    G_BANDWIDTH_230Hz= 0b001, // ODR 200 Hz
    G_BANDWIDTH_116Hz= 0b010, // ODR 100 Hz
    G_BANDWIDTH_47Hz = 0b011, // ODR 200 Hz
    G_BANDWIDTH_23Hz = 0b100, // ODR 400 Hz
    G_BANDWIDTH_12Hz = 0b101, // ODR 1000 Hz
    G_BANDWIDTH_64Hz = 0b110, // ODR 2000 Hz
    G_BANDWIDTH_32Hz = 0b111  // ODR 2000 Hz
} G_Bandwidth;

typedef enum {
    G_NORMAL = 0b00,
    G_DEEP_SUSPEND = 0b01,
    G_SUSPEND = 0b10
} G_Power_Mode;

typedef enum {
    G_SLEEP_DUR_2ms = 0,
    G_SLEEP_DUR_4ms,
    G_SLEEP_DUR_5ms,
    G_SLEEP_DUR_8ms,
    G_SLEEP_DUR_10ms,
    G_SLEEP_DUR_15ms,
    G_SLEEP_DUR_18ms,
    G_SLEEP_DUR_20ms
} G_Sleep_Dur;

// ext_trig_sel

typedef enum {
    G_AUTOSLEEP_DUR_no = 0,
    G_AUTOSLEEP_DUR_4ms,
    G_AUTOSLEEP_DUR_5ms,
    G_AUTOSLEEP_DUR_8ms,
    G_AUTOSLEEP_DUR_10ms,
    G_AUTOSLEEP_DUR_15ms,
    G_AUTOSLEEP_DUR_20ms,
    G_AUTOSLEEP_DUR_40ms
} G_Autosleep_Dur;

typedef enum {
    G_FIFO_MODE_BYPASS = 0,
    G_FIFO_MODE_FIFO,
    G_FIFO_MODE_STREAM
} G_FIO_Mode;

typedef enum {
    G_FIFO_DATA_ALL = 0,
    G_FIFO_DATA_X,
    G_FIFO_DATA_Y,
    G_FIFO_DATA_Z
} G_FIFO_Data_Select;